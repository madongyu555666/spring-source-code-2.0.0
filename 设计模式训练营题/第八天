1.通过绑定方法来实现观察者模式，会有什么隐患？
（1）如果通过绑定方法来实现观察者模式，观察者和被观察对象之间紧密的耦合起来，是违反面向对象的设计的原则。
（2）如果绑定多个观察者，在多线程环境下会进行排队等待，也就是阻塞，难免会影响效率。
（3）最好的方法是在观察者和被观察者之间建立一个中间层，来观察者和被观察者之间的关系。





jdk方式：
1. 观察者实现Observer接口的update方法，监听被观察者，并做出操作
2. 被观察者继承Observable类，定义被监听方法，并通知所有观察者
guava方式：
1. 观察者定义监听方法，参数为被监听事件类型，并添加Subscribe注解，表示该方法为监听方法
2. 被观察者继承Eventbus类，并添加观察者，被观察者使用post发送事件，当事件类型和观察者监听方法所要求的事件类型一致时，通知成功

隐患：
1. 可能存在相互依赖；
2. 通知观察者需要消耗资源和时间，影响性能。
绑定方法这个实在没搞懂怎么理解，看了讨论也没看懂。。。